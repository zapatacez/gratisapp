---
import type { Event } from '../pages/index.astro';
import { formatDate, slugify } from '../utils/helpers';

interface Props {
  event: Event;
}

const { event } = Astro.props;

// Debug logging
console.log('[EventCard] Event data:', {
  id: event?.id,
  title: event?.title,
  hasEvent: !!event
});

// Pick a gentle color based on id so cards vary subtly
function accentColor(id: number | string) {
  const colors = [
    'from-pink-300 to-pink-100',
    'from-indigo-300 to-indigo-100',
    'from-emerald-300 to-emerald-100',
    'from-amber-300 to-amber-100',
    'from-rose-300 to-rose-100',
  ];
  const i = (typeof id === 'number' ? id : 0) % colors.length;
  return colors[i % colors.length];
}

// Create the internal route URL with ID and slug
// Fallback to 'unknown' if id or title is missing
const eventId = event?.id ?? 'unknown';
const eventSlug = event?.title ? slugify(event.title) : 'event';
const eventUrl = `/events/${eventId}/${eventSlug}`;

console.log('[EventCard] Generated URL:', eventUrl);
---

<article class="border rounded-lg p-4 hover:shadow-lg transition">
  <a href={eventUrl} class="block">
    <div class={`h-2 w-full bg-gradient-to-r ${accentColor(event?.id ?? 0)}`} aria-hidden="true"></div>
    <div class="p-4 sm:p-5 flex gap-4 items-start">
      <div class="flex-shrink-0">
        <div class="w-14 h-14 rounded-lg bg-slate-100 flex items-center justify-center ring-1 ring-slate-200">
          <span class="text-sm font-semibold text-slate-700">
            {event?.title ? String(event.title).split(' ').slice(0,2).map((t: string) => t[0]).join('').toUpperCase() : 'EV'}
          </span>
        </div>
      </div>
      <div class="flex-1 min-w-0">
        <header class="flex items-start justify-between gap-3">
          <div class="min-w-0">
            <h3 class="text-base sm:text-lg font-semibold text-slate-900 truncate group-hover:text-sky-700">
              {event?.title}
            </h3>
            <p class="text-xs sm:text-sm text-slate-500 mt-0.5 truncate">
              {event?.organizer ?? 'Community Event'}
            </p>
          </div>
          <div class="text-right flex-shrink-0">
            <time 
              datetime={event?.eventDate ? new Date(event.eventDate).toISOString() : undefined} 
              class="block text-xs text-slate-400"
            >
              {formatDate(event?.eventDate)}
            </time>
          </div>
        </header>
        <p class="mt-3 text-sm text-slate-700 line-clamp-3">
          {event?.description ? String(event.description).slice(0, 300) + (String(event.description).length > 300 ? '\u2026' : '') : 'No description'}
        </p>
        <div class="mt-4 flex items-center justify-between text-xs text-slate-400">
          <div class="flex items-center gap-2">
            <span class="px-2 py-1 bg-slate-50 rounded-full text-slate-600">
              {event?.cityName ?? '—'}
            </span>
            <span class="text-slate-300">•</span>
            <span>{event?.districtName ?? '—'}</span>
          </div>
        </div>
      </div>
    </div>
  </a>
</article>