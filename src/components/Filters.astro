---
interface Props {
  cities?: Array<{ id: string | number; name: string; }>;
  districts?: Array<{ id: string | number; name: string; cityId?: string | number; }>;
  selectedCity?: string;
  selectedDistrict?: string;
}

const { 
  cities = [], 
  districts = [], 
  selectedCity = '', 
  selectedDistrict = '' 
} = Astro.props satisfies Props;
---

<form method="get" class="bg-white/70 backdrop-blur-sm border border-slate-100 rounded-xl p-3 sm:p-4 shadow-sm flex flex-col sm:flex-row gap-3 items-start sm:items-center">
  <div class="flex-1 grid grid-cols-1 sm:grid-cols-2 gap-3 w-full">
    <label class="flex flex-col">
      <span class="text-xs font-semibold text-slate-600 mb-1">City</span>
      <select name="city" class="bg-white border border-slate-200 rounded-md px-3 py-2 text-sm shadow-sm focus:ring-2 focus:ring-sky-100">
        <option value="">All cities</option>
        {cities.map(c => (
          <option selected={String(c.id) === String(selectedCity)} value={c.id}>{c.name}</option>
        ))}
      </select>
    </label>

    <label class="flex flex-col">
      <span class="text-xs font-semibold text-slate-600 mb-1">District</span>
      <select name="district" class="bg-white border border-slate-200 rounded-md px-3 py-2 text-sm shadow-sm focus:ring-2 focus:ring-sky-100">
        <option value="">All districts</option>
        {districts.map(d => (
          <option selected={String(d.id) === String(selectedDistrict)} value={d.id}>{d.name}</option>
        ))}
      </select>
    </label>
  </div>

  <div class="flex items-center gap-2 self-end">
    <button type="submit" class="inline-flex items-center gap-2 bg-sky-600 text-white text-sm font-medium px-3 py-2 rounded-full shadow hover:bg-sky-700 focus:outline-none focus:ring-2 focus:ring-sky-200">Apply</button>
    <a href="/" class="text-sm text-slate-500 hover:underline">Reset</a>
  </div>
</form>
