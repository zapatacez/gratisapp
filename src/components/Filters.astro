---
interface Props {
  cities?: Array<{ id: string | number; name: string; }>;
  districts?: Array<{ id: string | number; name: string; cityId?: string | number; }>;
  selectedCity?: string;
  selectedDistrict?: string;
}

const {
  cities = [],
  districts = [],
  selectedCity = '',
  selectedDistrict = ''
} = Astro.props satisfies Props;

// Filter districts by selected city
const filteredDistricts = selectedCity
  ? districts.filter(d => String(d.cityId) === String(selectedCity))
  : districts;
---

<form method="get" id="filters-form" class="bg-white/70 backdrop-blur-sm border border-slate-100 rounded-xl p-3 sm:p-4 shadow-sm">
  <div class="flex flex-col sm:flex-row gap-3 items-start sm:items-end">
    <div class="flex-1 grid grid-cols-1 sm:grid-cols-2 gap-3 w-full">
      <label class="flex flex-col">
        <span class="text-xs font-semibold text-slate-600 mb-1">City</span>
        <select
          name="city"
          id="city-select"
          onchange="this.form.submit()"
          class="bg-white border border-slate-200 rounded-md px-3 py-2 text-sm shadow-sm focus:ring-2 focus:ring-sky-100"
        >
          <option value="">All cities</option>
          {cities.map(c => (
            <option selected={String(c.id) === String(selectedCity)} value={c.id}>{c.name}</option>
          ))}
        </select>
      </label>

      <label class="flex flex-col">
        <span class="text-xs font-semibold text-slate-600 mb-1">District</span>
        <select
          name="district"
          id="district-select"
          onchange="this.form.submit()"
          class="bg-white border border-slate-200 rounded-md px-3 py-2 text-sm shadow-sm focus:ring-2 focus:ring-sky-100"
        >
          <option value="">All districts</option>
          {filteredDistricts.map(d => (
            <option selected={String(d.id) === String(selectedDistrict)} value={d.id}>{d.name}</option>
          ))}
        </select>
      </label>
    </div>

    <a href="/" class="text-sm text-slate-500 hover:text-slate-700 hover:underline whitespace-nowrap pb-2">Reset</a>
  </div>
</form>

<script>
  // Progressive enhancement: Clear district when city changes
  const citySelect = document.getElementById('city-select') as HTMLSelectElement | null;
  const districtSelect = document.getElementById('district-select') as HTMLSelectElement | null;

  if (citySelect && districtSelect) {
    citySelect.addEventListener('change', () => {
      // Clear district selection when city changes
      districtSelect.value = '';
    });
  }
</script>
