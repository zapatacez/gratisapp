---
import Layout from '../layouts/Layout.astro';
import EventCard from '../components/EventCard.astro';
import Filters from '../components/Filters.astro';
import { getLocations, getEvents } from '../lib/data';

const DB = Astro.locals.runtime.env.DB;
const url = new URL(Astro.request.url);
const selectedCity = url.searchParams.get('city') || '';
const selectedDistrict = url.searchParams.get('district') || '';

const [filteredEvents, { cities, districts }] = await Promise.all([
  getEvents(
    DB,
    selectedCity ? Number(selectedCity) : undefined,
    selectedDistrict ? Number(selectedDistrict) : undefined
  ),
  getLocations(DB)
]);

export type Event = typeof filteredEvents[0];
---

<Layout>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <header class="mb-8">
      <h1 class="text-4xl font-bold text-slate-900 mb-2">Eventos cerca a t√≠</h1>
      <p class="text-lg text-slate-600">Discubre nuevos eventos en tu distrito</p>
    </header>

    <Filters
      cities={cities}
      districts={districts}
      selectedCity={selectedCity}
      selectedDistrict={selectedDistrict}
    />

    <div class="mt-8 grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
      {filteredEvents.length === 0 ? (
        <div class="col-span-full text-center py-12 text-slate-500">
          No upcoming events found
        </div>
      ) : (
        filteredEvents.map(event => <EventCard event={event} />)
      )}
    </div>
  </div>
</Layout>
